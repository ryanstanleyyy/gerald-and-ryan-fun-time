---
title: "Wild Git Collaboration Practice"
format: 
  html:
    code-fold: show
execute: 
  warning: false
  message: false
---


## STEP 5: No merge conflicts!

```{r partner 1}
### In this code chunk, start with the diamonds dataset (built in to
### ggplot2 package) and create a plot of price vs. carat (or some other
### variables of your choice)
library(ggplot2)

ggplot(data = diamonds) +
  geom_point(aes(x = price, y = carat))

```

```{r partner 2}
### In this code chunk, start with the diamonds dataset (built in to
### ggplot2 package) and create a subset based on filtering, e.g., 
### size greater than 1 carat or cut is "Ideal"
library(dplyr)

diamonds_df <- ggplot2::diamonds |>
  filter(carat > 1)

```

## STEP 7: Uh oh, merge conflicts!

```{r break-it-1}
#Poooooooppyyyy pooooppppyyyy # Dont you fucking say word

ggplot(data = diamonds) +
  geom_point(aes(x = price, y = carat)) +
  theme_bw()




ggplot(data=diamonds_df) +
  geom_point (aes(x = depth, y = carat)) +
  theme_minimal()

summary(diamonds)

```



## STEP 11: And even more merge conflicts!

```{r break-it-2}
#AAAAHHHH HELP THEY"RE TAKING MY CHILDREN, PLEASE HELP KILL ME 

ggplot(data = diamonds) + 
  geom_line(aes(x=carat, y =depth))


```
